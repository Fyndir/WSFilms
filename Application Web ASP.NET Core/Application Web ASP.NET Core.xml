<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Application Web ASP.NET Core</name>
    </assembly>
    <members>
        <member name="M:Application_Web_ASP.NET_Core.Controllers.ComptesController.#ctor(Application_Web_ASP.NET_Core.Models.Repository.IDatarepository{Application_Web_ASP.NET_Core.Models.EntityFramework.Compte})">
            <summary>
            Constructeur pour l'injection de dependance
            </summary>
            <param name="dataRepository"></param>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Controllers.ComptesController.GetCompte">
            <summary>
            Retourne la liste de tout les comptes en bdd
            </summary>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Controllers.ComptesController.GetCompteById(System.Int32)">
            <summary>
            retourne le compte correspondant à l'id en parametre
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Controllers.ComptesController.GetCompteByEmail(System.String)">
            <summary>
            retorune le compte correspondant au mail en parametre
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Controllers.ComptesController.PutCompte(System.Int32,Application_Web_ASP.NET_Core.Models.EntityFramework.Compte)">
            <summary>
            Met à jour le compte correspondant à l'id avec les info passé dans l'object compte en parametre
            </summary>
            <param name="id"></param>
            <param name="compte"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Controllers.ComptesController.PostCompte(Application_Web_ASP.NET_Core.Models.EntityFramework.Compte)">
            <summary>
            Insere l'objet compte en parametre dans la bdd
            </summary>
            <param name="compte"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Controllers.FilmsController.#ctor(Application_Web_ASP.NET_Core.Models.Repository.IDatarepository{Application_Web_ASP.NET_Core.Models.EntityFramework.Film})">
            <summary>
            Constructeur pour l'injection de dependance
            </summary>
            <param name="dataRepository"></param>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Controllers.FilmsController.GetFilm">
            <summary>
            Retourne la liste de tout les Films en bdd
            </summary>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Controllers.FilmsController.GetFilmById(System.Int32)">
            <summary>
            retourne le Film correspondant à l'id en parametre
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Controllers.FilmsController.GetFilmByTitre(System.String)">
            <summary>
            retorune le Film correspondant au mail en parametre
            </summary>
            <param name="titre"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Controllers.FilmsController.PutFilm(System.Int32,Application_Web_ASP.NET_Core.Models.EntityFramework.Film)">
            <summary>
            Met à jour le Film correspondant à l'id avec les info passé dans l'object Film en parametre
            </summary>
            <param name="id"></param>
            <param name="Film"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Controllers.FilmsController.PostFilm(Application_Web_ASP.NET_Core.Models.EntityFramework.Film)">
            <summary>
            Insere l'objet Film en parametre dans la bdd
            </summary>
            <param name="Film"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.CompteManager.#ctor(Application_Web_ASP.NET_Core.Models.EntityFramework.FilmsDBContext)">
            <summary>
            Contructeur pour l'injection de dépendance
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.CompteManager.Add(Application_Web_ASP.NET_Core.Models.EntityFramework.Compte)">
            <summary>
            Ajoute le compte dans la bdd
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.CompteManager.Delete(Application_Web_ASP.NET_Core.Models.EntityFramework.Compte)">
            <summary>
            Supprime de la bdd le compte en parametre
            </summary>
            <param name="compte"></param>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.CompteManager.GetAll">
            <summary>
            retourne tous les comptes present dans la bdd
            </summary>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.CompteManager.GetById(System.Int32)">
            <summary>
            Retourne le compte lié a l'id en parametre
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.CompteManager.Update(Application_Web_ASP.NET_Core.Models.EntityFramework.Compte,Application_Web_ASP.NET_Core.Models.EntityFramework.Compte)">
            <summary>
            Update le premier compte en parametre avec les information du deuxieme
            </summary>
            <param name="compte"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.CompteManager.GetByString(System.String)">
            <summary>
            Retourne le compte lié au mail en paramatre
            </summary>
            <param name="mail"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.FilmManager.#ctor(Application_Web_ASP.NET_Core.Models.EntityFramework.FilmsDBContext)">
            <summary>
            Contructeur pour l'injection de dépendance
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.FilmManager.Add(Application_Web_ASP.NET_Core.Models.EntityFramework.Film)">
            <summary>
            Ajoute un film a la bdd
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.FilmManager.Delete(Application_Web_ASP.NET_Core.Models.EntityFramework.Film)">
            <summary>
            Supprime le film de la bdd
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.FilmManager.GetAll">
            <summary>
            retorune tout les films de la bdd
            </summary>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.FilmManager.GetById(System.Int32)">
            <summary>
            retourne le film correspondant a l'id en parametre
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.FilmManager.GetByString(System.String)">
            <summary>
            retourne le film correspondant au titre
            </summary>
            <param name="titreFilm"></param>
            <returns></returns>
        </member>
        <member name="M:Application_Web_ASP.NET_Core.Models.DataManager.FilmManager.Update(Application_Web_ASP.NET_Core.Models.EntityFramework.Film,Application_Web_ASP.NET_Core.Models.EntityFramework.Film)">
            <summary>
            Met à jour le film passé en parametre avec les données de l'autre
            </summary>
            <param name="film"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
    </members>
</doc>
